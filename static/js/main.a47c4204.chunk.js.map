{"version":3,"sources":["firebase.js","Components/Meal.js","MealList.js","Components/AddTask.js","Components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Meal","meal","useState","imageUrl","setImageUrl","instructions","setInstructions","handleRecipe","a","addDoc","collection","createdAt","Date","completed","useEffect","fetch","id","then","response","json","data","image","catch","console","log","title","src","alt","readyInMinutes","servings","trigger","className","class","href","sourceUrl","onClick","MealList","mealData","nutrients","calories","toFixed","carbohydrates","fat","protein","meals","map","AddTask","setTitle","handleSubmit","e","preventDefault","onSubmit","type","placeholder","value","onChange","target","Task","task","toggleComplete","handleDelete","style","textDecoration","App","setMealData","setCalories","tasks","setTasks","q","query","unsub","onSnapshot","querySnapshot","tasksArray","forEach","doc","push","updateDoc","deleteDoc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAcMA,EAAMC,YAVW,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,0DACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAILC,EAAKC,YAAaV,G,OCPT,SAASW,EAAT,GAAuB,IAARC,EAAO,EAAPA,KAC1B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAY,uCAAG,sBAAAC,EAAA,sEACXC,YAAOC,YAAWZ,EAAI,WAAY,CACpCO,eACAM,UAAW,IAAIC,KACfC,WAAW,IAJE,OAMfP,EAAgB,IAND,2CAAH,qDA+BlB,OAlBAQ,qBAAU,WACNC,MAAM,uCAAD,OAAwCd,EAAKe,GAA7C,gFACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHhB,EAAYgB,EAAKC,OAEjBf,EAAgBc,EAAKf,iBAIxBiB,OAAM,WACHC,QAAQC,IAAI,cAEjB,CAACvB,EAAKe,KAGbO,QAAQC,IAAInB,GAED,oCACH,6BAAKJ,EAAKwB,QACV,qBAAKC,IAAKvB,EAAUwB,IAAI,WACxB,+BACI,oDAAuB1B,EAAK2B,eAA5B,cACA,oDAAuB3B,EAAK4B,SAA5B,kBAKJ,cAAC,IAAD,CAAaC,QAAQ,eAAeC,UAAU,SAA9C,SACA,mBAAGC,MAAM,oBAAT,SAA8B3B,MAG9B,mBAAG4B,KAAMhC,EAAKiC,UAAd,0BACA,wBAAQH,UAAU,cAAcI,QAAS5B,EAAzC,4BCvDO,SAAS6B,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SACxBC,EAAYD,EAASC,UAG3B,OACI,iCACI,0BAASP,UAAU,YAAnB,UAEI,gDACA,qBAAIA,UAAU,eAAd,UACI,4CAAeO,EAAUC,SAASC,QAAQ,MAC1C,iDAAoBF,EAAUG,cAAcD,QAAQ,MACpD,uCAAUF,EAAUI,IAAIF,QAAQ,MAChC,2CAAcF,EAAUK,QAAQH,QAAQ,YAIhD,yBAAST,UAAU,QAAnB,SACKM,EAASO,MAAMC,KAAI,SAAC5C,GACjB,OAAO,cAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKe,YCjB3C,IA8Be8B,EA9BC,WACd,MAA0B5C,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcsB,EAAd,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAAzC,EAAA,6DACnByC,EAAEC,iBADiB,SAEbzC,YAAOC,YAAWZ,EAAI,SAAU,CACpC2B,QACAd,UAAW,IAAIC,KACfC,WAAW,IALM,OAOnBkC,EAAS,IAPU,2CAAH,sDASlB,OACE,uBAAMI,SAAUH,EAAhB,UAEE,qBAAKjB,UAAU,kBAAf,SACE,uBACEqB,KAAK,OACLC,YAAY,qBACZC,MAAO7B,EACP8B,SAAU,SAACN,GAAD,OAAOF,EAASE,EAAEO,OAAOF,YAGvC,qBAAKvB,UAAU,gBAAf,SACE,+CCZO0B,EAfF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACpC,OACE,sBAAK7B,UAAU,OAAf,UACE,mBACE8B,MAAO,CAAEC,eAAgBJ,EAAK7C,WAAa,gBAC3CsB,QAAS,kBAAMwB,EAAeD,IAFhC,SAIGA,EAAKjC,QAGR,wBAAQU,QAAS,kBAAMyB,EAAaF,EAAK1C,KAAzC,mBCkFW+C,MA7Ef,WAEE,MAAgC7D,mBAAS,MAAzC,mBAAOmC,EAAP,KAAiB2B,EAAjB,KACA,EAAgC9D,mBAAS,KAAzC,mBAAOqC,EAAP,KAAiB0B,EAAjB,KACA,EAA0B/D,mBAAS,IAAnC,mBAAOgE,EAAP,KAAcC,EAAd,KAEArD,qBAAU,WACR,IAAMsD,EAAIC,YAAM3D,YAAWZ,EAAI,UACzBwE,EAAQC,YAAWH,GAAG,SAACI,GAC3B,IAAIC,EAAa,GACjBD,EAAcE,SAAQ,SAACC,GACrBF,EAAWG,KAAX,2BAAqBD,EAAIvD,QAAzB,IAAiCJ,GAAI2D,EAAI3D,SAE3CmD,EAASM,MAEX,OAAO,kBAAMH,OACZ,IAEH,IAAMX,EAAc,uCAAG,WAAOD,GAAP,SAAAlD,EAAA,sEACfqE,YAAUF,YAAI7E,EAAI,QAAS4D,EAAK1C,IAAK,CAAEH,WAAY6C,EAAK7C,YADzC,2CAAH,sDAId+C,EAAY,uCAAG,WAAO5C,GAAP,SAAAR,EAAA,sEACbsE,YAAUH,YAAI7E,EAAI,QAASkB,IADd,2CAAH,sDA0BlB,OACE,sBAAKe,UAAU,MAAf,UAEE,0BAASA,UAAU,WAAnB,UACA,oBAAIA,UAAU,QAAd,2BACE,uBACEqB,KAAK,SACLC,YAAY,uBACZE,SAZR,SAAsBN,GACpBgB,EAAYhB,EAAEO,OAAOF,UAajB,wBAAQvB,UAAU,UAAUI,QAhClC,WACEpB,MAAM,yHAAD,OACsHwB,IAExHtB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL4C,EAAY5C,MAEbE,OAAM,WACLC,QAAQC,IAAI,YAEdyC,EAAY,KAqBV,iCACA,cAAC,EAAD,IACJ,qBAAKlC,UAAU,iBAAf,SACGmC,EAAMrB,KAAI,SAACa,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,eAAgBA,EAChBC,aAAcA,GAHTF,EAAK1C,YAQbqB,GAAY,cAACD,EAAD,CAAUC,SAAUA,QC5E1B0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhE,MAAK,YAAkD,IAA/CiE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a47c4204.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA-QPiLbyrWTAS6yEWe5a45FpgCDOA_-5s\",\n    authDomain: \"spoonacular-project.firebaseapp.com\",\n    databaseURL: \"https://spoonacular-project-default-rtdb.firebaseio.com\",\n    projectId: \"spoonacular-project\",\n    storageBucket: \"spoonacular-project.appspot.com\",\n    messagingSenderId: \"710037988295\",\n    appId: \"1:710037988295:web:4f09e06812178dff6b2fe2\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport { db };","import React, {useState, useEffect} from \"react\";\nimport Collapsible from 'react-collapsible';\nimport {db} from '../firebase';\nimport { collection, addDoc } from \"firebase/firestore\";  \n\n\n\n\nexport default function Meal({meal}) {\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [instructions, setInstructions] = useState(\"\");\n\n    const handleRecipe = async () => {\n        await addDoc(collection(db, \"recipes\"), {\n            instructions,\n            createdAt: new Date(),\n            completed: false,\n          });\n          setInstructions(\"\");\n\n    }\n\n\n   \n\n    useEffect(() => {\n        fetch(`https://api.spoonacular.com/recipes/${meal.id}/information?apiKey=0848a43ddfe342389220740abf795d76&includeNutrition=false`)\n        .then((response) => response.json())\n        .then((data) => {\n            setImageUrl(data.image)\n            \n            setInstructions(data.instructions)\n            \n            \n        })\n        .catch(() => {\n            console.log(\"error\");\n        })\n    }, [meal.id])\n\n\nconsole.log(instructions)\n    \n    return <article>\n        <h1>{meal.title}</h1>\n        <img src={imageUrl} alt=\"recipe\" />\n        <ul>\n            <li>Preparation time: {meal.readyInMinutes} minutes</li>\n            <li>Preparation time: {meal.servings} servings</li>\n            \n            \n        </ul>\n        \n        <Collapsible trigger=\"Instructions\" className=\"button\">\n        <p class=\"instructions-text\">{instructions}</p>\n        </Collapsible>\n        \n        <a href={meal.sourceUrl}>Go to Recipe</a>\n        <button className=\"save-recipe\" onClick={handleRecipe} >Save Recipe</button>\n\n    </article>\n}","\nimport Meal from './Components/Meal';\n\nexport default function MealList({mealData}) {\n    const nutrients = mealData.nutrients;\n\n    \n    return (\n        <main>\n            <section className=\"nutrients\">\n                \n                <h1>Your meal plan</h1>\n                <ul className=\"instructions\">\n                    <li>Calroies: {nutrients.calories.toFixed(0)}</li>\n                    <li>Carbohydrates: {nutrients.carbohydrates.toFixed(0)}</li>\n                    <li>Fat: {nutrients.fat.toFixed(0)}</li>\n                    <li>Protein: {nutrients.protein.toFixed(0)}</li>\n                </ul>\n            </section>\n\n            <section className=\"meals\">\n                {mealData.meals.map((meal) => {\n                    return <Meal key={meal.id} meal={meal} />;\n                })}\n\n                \n            </section>\n\n        </main>)\n}\n","import { useState } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\n\nconst AddTask = () => {\n  const [title, setTitle] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await addDoc(collection(db, \"tasks\"), {\n      title,\n      createdAt: new Date(),\n      completed: false,\n    });\n    setTitle(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <div className=\"input_container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter task todo...\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div className=\"btn_container\">\n        <button>Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTask;","import React from \"react\";\n\nconst Task = ({ task, toggleComplete, handleDelete }) => {\n  return (\n    <div className=\"task\">\n      <p\n        style={{ textDecoration: task.completed && \"line-through\" }}\n        onClick={() => toggleComplete(task)}\n      >\n        {task.title}\n      </p>\n\n      <button onClick={() => handleDelete(task.id)}>X</button>\n    </div>\n  );\n};\n\nexport default Task;","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport MealList from \"./MealList\";\nimport AddTask from \"./Components/AddTask\";\nimport Task from \"./Components/Task\";\nimport {\n  collection,\n  query,\n  onSnapshot,\n  doc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n  \n\n  function App() {\n    \n    const [mealData, setMealData] = useState(null);\n    const [calories, setCalories] = useState(2000);\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n      const q = query(collection(db, \"tasks\"));\n      const unsub = onSnapshot(q, (querySnapshot) => {\n        let tasksArray = [];\n        querySnapshot.forEach((doc) => {\n          tasksArray.push({ ...doc.data(), id: doc.id });\n        });\n        setTasks(tasksArray);\n      });\n      return () => unsub();\n    }, []);\n  \n    const toggleComplete = async (task) => {\n      await updateDoc(doc(db, \"tasks\", task.id), { completed: !task.completed });\n    };\n  \n    const handleDelete = async (id) => {\n      await deleteDoc(doc(db, \"tasks\", id));\n    };\n  \n    function getMealData() {\n      fetch(\n        `https://api.spoonacular.com/mealplanner/generate?apiKey=cb1c464d94f142c08b156c5beddade8b&timeFrame=day&targetCalories=${calories}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setMealData(data);\n        })\n        .catch(() => {\n          console.log(\"error\");\n        });\n        setCalories(\"\");\n      \n    }\n\n\n    \n\n    function handleChange(e) {\n      setCalories(e.target.value);\n    }\n  \n    return (\n      <div className=\"App\">\n        \n        <section className=\"controls\">\n        <h1 className=\"title\">Healthy meals</h1>\n          <input\n            type=\"number\"\n            placeholder=\"Calories (e.g. 2000)\"\n            onChange={handleChange}\n          />\n          <button className=\"getMeal\" onClick={getMealData}>Get Daily Meal Plan</button>\n          <AddTask />\n      <div className=\"task_container\">\n        {tasks.map((task) => (\n          <Task\n            key={task.id}\n            task={task}\n            toggleComplete={toggleComplete}\n            handleDelete={handleDelete}\n          />\n        ))}\n      </div>\n        </section>\n        {mealData && <MealList mealData={mealData} />}\n\n      </div>\n    );\n  }\n  \n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}